type: base
get: 
  queryParameters: 
    q: 
      description: The query string (maps to the query_string query, see Query String Query for more details).
      example: "user:kimchy"
    df: 
      description: The default field to use when no field prefix is defined within the query.
    analyzer: 
      description: The analyzer name to be used when analyzing the query string.
    default_operator: 
      description: The default operator to be used, can be AND or OR. Defaults to OR.
    explain: 
      description: For each hit, contain an explanation of how scoring of the hits was computed.
    fields: 
      description: The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.
    sort: 
      description: "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important)."
    track_scores: 
      description: When sorting, set to true in order to still track scores and return them as part of each hit.
    timeout: 
      description: A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.
    from: 
      description: The starting from index of the hits to return. Defaults to 0.
      default: 0
    size: 
      description: The number of hits to return. Defaults to 10.
      default: 10
    search_type: 
      description: The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.
    lowercase_expanded_terms: 
      description: Should terms be automatically lowercased or not. Defaults to true.
      type: boolean
      default: true
    analyze_wildcard: 
      description: Should wildcard and prefix queries be analyzed or not. Defaults to false.
      type: boolean
  body: 
    application/json: 
      schema: countReq
      example: !include ../examples/countReq-example.json
  responses: 
    200: 
      body: 
        application/json: 
          schema: searchResp
          example: !include ../examples/searchResp-example.json
